//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace InspectionReportWebApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InspectionReportDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InspectionReportDataSet1 : global::System.Data.DataSet {
        
        private InspectionReportDataTable tableInspectionReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public InspectionReportDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected InspectionReportDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["InspectionReport"] != null)) {
                    base.Tables.Add(new InspectionReportDataTable(ds.Tables["InspectionReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InspectionReportDataTable InspectionReport {
            get {
                return this.tableInspectionReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InspectionReportDataSet1 cln = ((InspectionReportDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["InspectionReport"] != null)) {
                    base.Tables.Add(new InspectionReportDataTable(ds.Tables["InspectionReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableInspectionReport = ((InspectionReportDataTable)(base.Tables["InspectionReport"]));
            if ((initTable == true)) {
                if ((this.tableInspectionReport != null)) {
                    this.tableInspectionReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InspectionReportDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InspectionReportDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInspectionReport = new InspectionReportDataTable();
            base.Tables.Add(this.tableInspectionReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeInspectionReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InspectionReportDataSet1 ds = new InspectionReportDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void InspectionReportRowChangeEventHandler(object sender, InspectionReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InspectionReportDataTable : global::System.Data.TypedTableBase<InspectionReportRow> {
            
            private global::System.Data.DataColumn columnAccountNo;
            
            private global::System.Data.DataColumn columnBusinessName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnBarangay;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnNatureOfBusiness;
            
            private global::System.Data.DataColumn columnEstablishmentHas;
            
            private global::System.Data.DataColumn columnBusinessStatus;
            
            private global::System.Data.DataColumn columnEstablishmentIs;
            
            private global::System.Data.DataColumn columnViolations;
            
            private global::System.Data.DataColumn columnComplyWithin;
            
            private global::System.Data.DataColumn columnSecuretheFF;
            
            private global::System.Data.DataColumn columnAttendSeminar;
            
            private global::System.Data.DataColumn columnMayorsPermit;
            
            private global::System.Data.DataColumn columnEPPFee;
            
            private global::System.Data.DataColumn columnECCCNC;
            
            private global::System.Data.DataColumn columnECCCNCNo;
            
            private global::System.Data.DataColumn columnECCDateIssued;
            
            private global::System.Data.DataColumn columnWDP;
            
            private global::System.Data.DataColumn columnWDPNo;
            
            private global::System.Data.DataColumn columnWDPDateIssued;
            
            private global::System.Data.DataColumn columnPTO;
            
            private global::System.Data.DataColumn columnPTONo;
            
            private global::System.Data.DataColumn columnPTODateIssued;
            
            private global::System.Data.DataColumn columnHWID;
            
            private global::System.Data.DataColumn columnHWIDNo;
            
            private global::System.Data.DataColumn columnHWIDDateIssued;
            
            private global::System.Data.DataColumn columnHasPollutionOfficer;
            
            private global::System.Data.DataColumn columnPollutionOfficer;
            
            private global::System.Data.DataColumn columnAccreditation;
            
            private global::System.Data.DataColumn columnValidityOfPOC;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnHasWasteBin;
            
            private global::System.Data.DataColumn columnBinsLabeled;
            
            private global::System.Data.DataColumn columnBinsCovered;
            
            private global::System.Data.DataColumn columnBinsSegregated;
            
            private global::System.Data.DataColumn columnMRF;
            
            private global::System.Data.DataColumn columnWasteCollected;
            
            private global::System.Data.DataColumn columnFrequencyHauling;
            
            private global::System.Data.DataColumn columnHauler;
            
            private global::System.Data.DataColumn columnHasSeptic;
            
            private global::System.Data.DataColumn columnLocationSeptic;
            
            private global::System.Data.DataColumn columnFrequencyDesludge;
            
            private global::System.Data.DataColumn columnDateDesludge;
            
            private global::System.Data.DataColumn columnServiceProvider;
            
            private global::System.Data.DataColumn columnHasGreaseTrap;
            
            private global::System.Data.DataColumn columnLocationGrease;
            
            private global::System.Data.DataColumn columnCapacityGreaseTrap;
            
            private global::System.Data.DataColumn columnFrequencyGrease;
            
            private global::System.Data.DataColumn columnHaulerGrease;
            
            private global::System.Data.DataColumn columnHasWasteWater;
            
            private global::System.Data.DataColumn columnUsedOilProperlyDisposed;
            
            private global::System.Data.DataColumn columnTypeofOil;
            
            private global::System.Data.DataColumn columnFrequencyofHaulingOil;
            
            private global::System.Data.DataColumn columnHaulerOil;
            
            private global::System.Data.DataColumn columnHasAirPollutionManager;
            
            private global::System.Data.DataColumn columnDeviceType;
            
            private global::System.Data.DataColumn columnMaintenanceProvider;
            
            private global::System.Data.DataColumn columnPurposeOfInspection;
            
            private global::System.Data.DataColumn columnReinspectDate;
            
            private global::System.Data.DataColumn columnLevelofInspection;
            
            private global::System.Data.DataColumn columnLandUse;
            
            private global::System.Data.DataColumn columnOwnershipTerms;
            
            private global::System.Data.DataColumn columnLessee;
            
            private global::System.Data.DataColumn columnStandAlone;
            
            private global::System.Data.DataColumn columnEstablishmentStatus;
            
            private global::System.Data.DataColumn columnInspectorObservation;
            
            private global::System.Data.DataColumn columnDirectives;
            
            private global::System.Data.DataColumn columnOVR;
            
            private global::System.Data.DataColumn columnRecommendations;
            
            private global::System.Data.DataColumn columnInspector;
            
            private global::System.Data.DataColumn columnEncoder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public InspectionReportDataTable() {
                this.TableName = "InspectionReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal InspectionReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected InspectionReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AccountNoColumn {
                get {
                    return this.columnAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessNameColumn {
                get {
                    return this.columnBusinessName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BarangayColumn {
                get {
                    return this.columnBarangay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NatureOfBusinessColumn {
                get {
                    return this.columnNatureOfBusiness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EstablishmentHasColumn {
                get {
                    return this.columnEstablishmentHas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BusinessStatusColumn {
                get {
                    return this.columnBusinessStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EstablishmentIsColumn {
                get {
                    return this.columnEstablishmentIs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ViolationsColumn {
                get {
                    return this.columnViolations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ComplyWithinColumn {
                get {
                    return this.columnComplyWithin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SecuretheFFColumn {
                get {
                    return this.columnSecuretheFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AttendSeminarColumn {
                get {
                    return this.columnAttendSeminar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MayorsPermitColumn {
                get {
                    return this.columnMayorsPermit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EPPFeeColumn {
                get {
                    return this.columnEPPFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ECCCNCColumn {
                get {
                    return this.columnECCCNC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ECCCNCNoColumn {
                get {
                    return this.columnECCCNCNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ECCDateIssuedColumn {
                get {
                    return this.columnECCDateIssued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WDPColumn {
                get {
                    return this.columnWDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WDPNoColumn {
                get {
                    return this.columnWDPNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WDPDateIssuedColumn {
                get {
                    return this.columnWDPDateIssued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PTOColumn {
                get {
                    return this.columnPTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PTONoColumn {
                get {
                    return this.columnPTONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PTODateIssuedColumn {
                get {
                    return this.columnPTODateIssued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HWIDColumn {
                get {
                    return this.columnHWID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HWIDNoColumn {
                get {
                    return this.columnHWIDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HWIDDateIssuedColumn {
                get {
                    return this.columnHWIDDateIssued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HasPollutionOfficerColumn {
                get {
                    return this.columnHasPollutionOfficer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PollutionOfficerColumn {
                get {
                    return this.columnPollutionOfficer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AccreditationColumn {
                get {
                    return this.columnAccreditation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ValidityOfPOCColumn {
                get {
                    return this.columnValidityOfPOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HasWasteBinColumn {
                get {
                    return this.columnHasWasteBin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BinsLabeledColumn {
                get {
                    return this.columnBinsLabeled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BinsCoveredColumn {
                get {
                    return this.columnBinsCovered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BinsSegregatedColumn {
                get {
                    return this.columnBinsSegregated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MRFColumn {
                get {
                    return this.columnMRF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WasteCollectedColumn {
                get {
                    return this.columnWasteCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FrequencyHaulingColumn {
                get {
                    return this.columnFrequencyHauling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HaulerColumn {
                get {
                    return this.columnHauler;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HasSepticColumn {
                get {
                    return this.columnHasSeptic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationSepticColumn {
                get {
                    return this.columnLocationSeptic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FrequencyDesludgeColumn {
                get {
                    return this.columnFrequencyDesludge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DateDesludgeColumn {
                get {
                    return this.columnDateDesludge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ServiceProviderColumn {
                get {
                    return this.columnServiceProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HasGreaseTrapColumn {
                get {
                    return this.columnHasGreaseTrap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationGreaseColumn {
                get {
                    return this.columnLocationGrease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CapacityGreaseTrapColumn {
                get {
                    return this.columnCapacityGreaseTrap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FrequencyGreaseColumn {
                get {
                    return this.columnFrequencyGrease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HaulerGreaseColumn {
                get {
                    return this.columnHaulerGrease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HasWasteWaterColumn {
                get {
                    return this.columnHasWasteWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UsedOilProperlyDisposedColumn {
                get {
                    return this.columnUsedOilProperlyDisposed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TypeofOilColumn {
                get {
                    return this.columnTypeofOil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FrequencyofHaulingOilColumn {
                get {
                    return this.columnFrequencyofHaulingOil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HaulerOilColumn {
                get {
                    return this.columnHaulerOil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HasAirPollutionManagerColumn {
                get {
                    return this.columnHasAirPollutionManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DeviceTypeColumn {
                get {
                    return this.columnDeviceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MaintenanceProviderColumn {
                get {
                    return this.columnMaintenanceProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PurposeOfInspectionColumn {
                get {
                    return this.columnPurposeOfInspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReinspectDateColumn {
                get {
                    return this.columnReinspectDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LevelofInspectionColumn {
                get {
                    return this.columnLevelofInspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LandUseColumn {
                get {
                    return this.columnLandUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OwnershipTermsColumn {
                get {
                    return this.columnOwnershipTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LesseeColumn {
                get {
                    return this.columnLessee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StandAloneColumn {
                get {
                    return this.columnStandAlone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EstablishmentStatusColumn {
                get {
                    return this.columnEstablishmentStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InspectorObservationColumn {
                get {
                    return this.columnInspectorObservation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DirectivesColumn {
                get {
                    return this.columnDirectives;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OVRColumn {
                get {
                    return this.columnOVR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RecommendationsColumn {
                get {
                    return this.columnRecommendations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InspectorColumn {
                get {
                    return this.columnInspector;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EncoderColumn {
                get {
                    return this.columnEncoder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public InspectionReportRow this[int index] {
                get {
                    return ((InspectionReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event InspectionReportRowChangeEventHandler InspectionReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event InspectionReportRowChangeEventHandler InspectionReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event InspectionReportRowChangeEventHandler InspectionReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event InspectionReportRowChangeEventHandler InspectionReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddInspectionReportRow(InspectionReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public InspectionReportRow AddInspectionReportRow(
                        string AccountNo, 
                        string BusinessName, 
                        string Address, 
                        string Barangay, 
                        System.DateTime Date, 
                        string NatureOfBusiness, 
                        string EstablishmentHas, 
                        string BusinessStatus, 
                        string EstablishmentIs, 
                        string Violations, 
                        string ComplyWithin, 
                        string SecuretheFF, 
                        string AttendSeminar, 
                        string MayorsPermit, 
                        string EPPFee, 
                        string ECCCNC, 
                        string ECCCNCNo, 
                        System.DateTime ECCDateIssued, 
                        string WDP, 
                        string WDPNo, 
                        System.DateTime WDPDateIssued, 
                        string PTO, 
                        string PTONo, 
                        System.DateTime PTODateIssued, 
                        string HWID, 
                        string HWIDNo, 
                        System.DateTime HWIDDateIssued, 
                        string HasPollutionOfficer, 
                        string PollutionOfficer, 
                        string Accreditation, 
                        System.DateTime ValidityOfPOC, 
                        string ContactNo, 
                        string Email, 
                        string HasWasteBin, 
                        string BinsLabeled, 
                        string BinsCovered, 
                        string BinsSegregated, 
                        string MRF, 
                        string WasteCollected, 
                        string FrequencyHauling, 
                        string Hauler, 
                        string HasSeptic, 
                        string LocationSeptic, 
                        string FrequencyDesludge, 
                        System.DateTime DateDesludge, 
                        string ServiceProvider, 
                        string HasGreaseTrap, 
                        string LocationGrease, 
                        string CapacityGreaseTrap, 
                        string FrequencyGrease, 
                        string HaulerGrease, 
                        string HasWasteWater, 
                        string UsedOilProperlyDisposed, 
                        string TypeofOil, 
                        string FrequencyofHaulingOil, 
                        string HaulerOil, 
                        string HasAirPollutionManager, 
                        string DeviceType, 
                        string MaintenanceProvider, 
                        string PurposeOfInspection, 
                        System.DateTime ReinspectDate, 
                        string LevelofInspection, 
                        string LandUse, 
                        string OwnershipTerms, 
                        string Lessee, 
                        string StandAlone, 
                        string EstablishmentStatus, 
                        string InspectorObservation, 
                        string Directives, 
                        string OVR, 
                        string Recommendations, 
                        string Inspector, 
                        string Encoder) {
                InspectionReportRow rowInspectionReportRow = ((InspectionReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccountNo,
                        BusinessName,
                        Address,
                        Barangay,
                        Date,
                        NatureOfBusiness,
                        EstablishmentHas,
                        BusinessStatus,
                        EstablishmentIs,
                        Violations,
                        ComplyWithin,
                        SecuretheFF,
                        AttendSeminar,
                        MayorsPermit,
                        EPPFee,
                        ECCCNC,
                        ECCCNCNo,
                        ECCDateIssued,
                        WDP,
                        WDPNo,
                        WDPDateIssued,
                        PTO,
                        PTONo,
                        PTODateIssued,
                        HWID,
                        HWIDNo,
                        HWIDDateIssued,
                        HasPollutionOfficer,
                        PollutionOfficer,
                        Accreditation,
                        ValidityOfPOC,
                        ContactNo,
                        Email,
                        HasWasteBin,
                        BinsLabeled,
                        BinsCovered,
                        BinsSegregated,
                        MRF,
                        WasteCollected,
                        FrequencyHauling,
                        Hauler,
                        HasSeptic,
                        LocationSeptic,
                        FrequencyDesludge,
                        DateDesludge,
                        ServiceProvider,
                        HasGreaseTrap,
                        LocationGrease,
                        CapacityGreaseTrap,
                        FrequencyGrease,
                        HaulerGrease,
                        HasWasteWater,
                        UsedOilProperlyDisposed,
                        TypeofOil,
                        FrequencyofHaulingOil,
                        HaulerOil,
                        HasAirPollutionManager,
                        DeviceType,
                        MaintenanceProvider,
                        PurposeOfInspection,
                        ReinspectDate,
                        LevelofInspection,
                        LandUse,
                        OwnershipTerms,
                        Lessee,
                        StandAlone,
                        EstablishmentStatus,
                        InspectorObservation,
                        Directives,
                        OVR,
                        Recommendations,
                        Inspector,
                        Encoder};
                rowInspectionReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInspectionReportRow);
                return rowInspectionReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public InspectionReportRow FindByAccountNo(string AccountNo) {
                return ((InspectionReportRow)(this.Rows.Find(new object[] {
                            AccountNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InspectionReportDataTable cln = ((InspectionReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InspectionReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnAccountNo = base.Columns["AccountNo"];
                this.columnBusinessName = base.Columns["BusinessName"];
                this.columnAddress = base.Columns["Address"];
                this.columnBarangay = base.Columns["Barangay"];
                this.columnDate = base.Columns["Date"];
                this.columnNatureOfBusiness = base.Columns["NatureOfBusiness"];
                this.columnEstablishmentHas = base.Columns["EstablishmentHas"];
                this.columnBusinessStatus = base.Columns["BusinessStatus"];
                this.columnEstablishmentIs = base.Columns["EstablishmentIs"];
                this.columnViolations = base.Columns["Violations"];
                this.columnComplyWithin = base.Columns["ComplyWithin"];
                this.columnSecuretheFF = base.Columns["SecuretheFF"];
                this.columnAttendSeminar = base.Columns["AttendSeminar"];
                this.columnMayorsPermit = base.Columns["MayorsPermit"];
                this.columnEPPFee = base.Columns["EPPFee"];
                this.columnECCCNC = base.Columns["ECCCNC"];
                this.columnECCCNCNo = base.Columns["ECCCNCNo"];
                this.columnECCDateIssued = base.Columns["ECCDateIssued"];
                this.columnWDP = base.Columns["WDP"];
                this.columnWDPNo = base.Columns["WDPNo"];
                this.columnWDPDateIssued = base.Columns["WDPDateIssued"];
                this.columnPTO = base.Columns["PTO"];
                this.columnPTONo = base.Columns["PTONo"];
                this.columnPTODateIssued = base.Columns["PTODateIssued"];
                this.columnHWID = base.Columns["HWID"];
                this.columnHWIDNo = base.Columns["HWIDNo"];
                this.columnHWIDDateIssued = base.Columns["HWIDDateIssued"];
                this.columnHasPollutionOfficer = base.Columns["HasPollutionOfficer"];
                this.columnPollutionOfficer = base.Columns["PollutionOfficer"];
                this.columnAccreditation = base.Columns["Accreditation"];
                this.columnValidityOfPOC = base.Columns["ValidityOfPOC"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnEmail = base.Columns["Email"];
                this.columnHasWasteBin = base.Columns["HasWasteBin"];
                this.columnBinsLabeled = base.Columns["BinsLabeled"];
                this.columnBinsCovered = base.Columns["BinsCovered"];
                this.columnBinsSegregated = base.Columns["BinsSegregated"];
                this.columnMRF = base.Columns["MRF"];
                this.columnWasteCollected = base.Columns["WasteCollected"];
                this.columnFrequencyHauling = base.Columns["FrequencyHauling"];
                this.columnHauler = base.Columns["Hauler"];
                this.columnHasSeptic = base.Columns["HasSeptic"];
                this.columnLocationSeptic = base.Columns["LocationSeptic"];
                this.columnFrequencyDesludge = base.Columns["FrequencyDesludge"];
                this.columnDateDesludge = base.Columns["DateDesludge"];
                this.columnServiceProvider = base.Columns["ServiceProvider"];
                this.columnHasGreaseTrap = base.Columns["HasGreaseTrap"];
                this.columnLocationGrease = base.Columns["LocationGrease"];
                this.columnCapacityGreaseTrap = base.Columns["CapacityGreaseTrap"];
                this.columnFrequencyGrease = base.Columns["FrequencyGrease"];
                this.columnHaulerGrease = base.Columns["HaulerGrease"];
                this.columnHasWasteWater = base.Columns["HasWasteWater"];
                this.columnUsedOilProperlyDisposed = base.Columns["UsedOilProperlyDisposed"];
                this.columnTypeofOil = base.Columns["TypeofOil"];
                this.columnFrequencyofHaulingOil = base.Columns["FrequencyofHaulingOil"];
                this.columnHaulerOil = base.Columns["HaulerOil"];
                this.columnHasAirPollutionManager = base.Columns["HasAirPollutionManager"];
                this.columnDeviceType = base.Columns["DeviceType"];
                this.columnMaintenanceProvider = base.Columns["MaintenanceProvider"];
                this.columnPurposeOfInspection = base.Columns["PurposeOfInspection"];
                this.columnReinspectDate = base.Columns["ReinspectDate"];
                this.columnLevelofInspection = base.Columns["LevelofInspection"];
                this.columnLandUse = base.Columns["LandUse"];
                this.columnOwnershipTerms = base.Columns["OwnershipTerms"];
                this.columnLessee = base.Columns["Lessee"];
                this.columnStandAlone = base.Columns["StandAlone"];
                this.columnEstablishmentStatus = base.Columns["EstablishmentStatus"];
                this.columnInspectorObservation = base.Columns["InspectorObservation"];
                this.columnDirectives = base.Columns["Directives"];
                this.columnOVR = base.Columns["OVR"];
                this.columnRecommendations = base.Columns["Recommendations"];
                this.columnInspector = base.Columns["Inspector"];
                this.columnEncoder = base.Columns["Encoder"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnAccountNo = new global::System.Data.DataColumn("AccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountNo);
                this.columnBusinessName = new global::System.Data.DataColumn("BusinessName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnBarangay = new global::System.Data.DataColumn("Barangay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarangay);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnNatureOfBusiness = new global::System.Data.DataColumn("NatureOfBusiness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNatureOfBusiness);
                this.columnEstablishmentHas = new global::System.Data.DataColumn("EstablishmentHas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstablishmentHas);
                this.columnBusinessStatus = new global::System.Data.DataColumn("BusinessStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessStatus);
                this.columnEstablishmentIs = new global::System.Data.DataColumn("EstablishmentIs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstablishmentIs);
                this.columnViolations = new global::System.Data.DataColumn("Violations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViolations);
                this.columnComplyWithin = new global::System.Data.DataColumn("ComplyWithin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplyWithin);
                this.columnSecuretheFF = new global::System.Data.DataColumn("SecuretheFF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecuretheFF);
                this.columnAttendSeminar = new global::System.Data.DataColumn("AttendSeminar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendSeminar);
                this.columnMayorsPermit = new global::System.Data.DataColumn("MayorsPermit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMayorsPermit);
                this.columnEPPFee = new global::System.Data.DataColumn("EPPFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPPFee);
                this.columnECCCNC = new global::System.Data.DataColumn("ECCCNC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECCCNC);
                this.columnECCCNCNo = new global::System.Data.DataColumn("ECCCNCNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECCCNCNo);
                this.columnECCDateIssued = new global::System.Data.DataColumn("ECCDateIssued", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECCDateIssued);
                this.columnWDP = new global::System.Data.DataColumn("WDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWDP);
                this.columnWDPNo = new global::System.Data.DataColumn("WDPNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWDPNo);
                this.columnWDPDateIssued = new global::System.Data.DataColumn("WDPDateIssued", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWDPDateIssued);
                this.columnPTO = new global::System.Data.DataColumn("PTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTO);
                this.columnPTONo = new global::System.Data.DataColumn("PTONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTONo);
                this.columnPTODateIssued = new global::System.Data.DataColumn("PTODateIssued", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTODateIssued);
                this.columnHWID = new global::System.Data.DataColumn("HWID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHWID);
                this.columnHWIDNo = new global::System.Data.DataColumn("HWIDNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHWIDNo);
                this.columnHWIDDateIssued = new global::System.Data.DataColumn("HWIDDateIssued", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHWIDDateIssued);
                this.columnHasPollutionOfficer = new global::System.Data.DataColumn("HasPollutionOfficer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasPollutionOfficer);
                this.columnPollutionOfficer = new global::System.Data.DataColumn("PollutionOfficer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPollutionOfficer);
                this.columnAccreditation = new global::System.Data.DataColumn("Accreditation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccreditation);
                this.columnValidityOfPOC = new global::System.Data.DataColumn("ValidityOfPOC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidityOfPOC);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnHasWasteBin = new global::System.Data.DataColumn("HasWasteBin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasWasteBin);
                this.columnBinsLabeled = new global::System.Data.DataColumn("BinsLabeled", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBinsLabeled);
                this.columnBinsCovered = new global::System.Data.DataColumn("BinsCovered", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBinsCovered);
                this.columnBinsSegregated = new global::System.Data.DataColumn("BinsSegregated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBinsSegregated);
                this.columnMRF = new global::System.Data.DataColumn("MRF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRF);
                this.columnWasteCollected = new global::System.Data.DataColumn("WasteCollected", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWasteCollected);
                this.columnFrequencyHauling = new global::System.Data.DataColumn("FrequencyHauling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequencyHauling);
                this.columnHauler = new global::System.Data.DataColumn("Hauler", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHauler);
                this.columnHasSeptic = new global::System.Data.DataColumn("HasSeptic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasSeptic);
                this.columnLocationSeptic = new global::System.Data.DataColumn("LocationSeptic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationSeptic);
                this.columnFrequencyDesludge = new global::System.Data.DataColumn("FrequencyDesludge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequencyDesludge);
                this.columnDateDesludge = new global::System.Data.DataColumn("DateDesludge", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDesludge);
                this.columnServiceProvider = new global::System.Data.DataColumn("ServiceProvider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceProvider);
                this.columnHasGreaseTrap = new global::System.Data.DataColumn("HasGreaseTrap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasGreaseTrap);
                this.columnLocationGrease = new global::System.Data.DataColumn("LocationGrease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationGrease);
                this.columnCapacityGreaseTrap = new global::System.Data.DataColumn("CapacityGreaseTrap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapacityGreaseTrap);
                this.columnFrequencyGrease = new global::System.Data.DataColumn("FrequencyGrease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequencyGrease);
                this.columnHaulerGrease = new global::System.Data.DataColumn("HaulerGrease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHaulerGrease);
                this.columnHasWasteWater = new global::System.Data.DataColumn("HasWasteWater", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasWasteWater);
                this.columnUsedOilProperlyDisposed = new global::System.Data.DataColumn("UsedOilProperlyDisposed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsedOilProperlyDisposed);
                this.columnTypeofOil = new global::System.Data.DataColumn("TypeofOil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeofOil);
                this.columnFrequencyofHaulingOil = new global::System.Data.DataColumn("FrequencyofHaulingOil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequencyofHaulingOil);
                this.columnHaulerOil = new global::System.Data.DataColumn("HaulerOil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHaulerOil);
                this.columnHasAirPollutionManager = new global::System.Data.DataColumn("HasAirPollutionManager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasAirPollutionManager);
                this.columnDeviceType = new global::System.Data.DataColumn("DeviceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceType);
                this.columnMaintenanceProvider = new global::System.Data.DataColumn("MaintenanceProvider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintenanceProvider);
                this.columnPurposeOfInspection = new global::System.Data.DataColumn("PurposeOfInspection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurposeOfInspection);
                this.columnReinspectDate = new global::System.Data.DataColumn("ReinspectDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReinspectDate);
                this.columnLevelofInspection = new global::System.Data.DataColumn("LevelofInspection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevelofInspection);
                this.columnLandUse = new global::System.Data.DataColumn("LandUse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandUse);
                this.columnOwnershipTerms = new global::System.Data.DataColumn("OwnershipTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnershipTerms);
                this.columnLessee = new global::System.Data.DataColumn("Lessee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLessee);
                this.columnStandAlone = new global::System.Data.DataColumn("StandAlone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandAlone);
                this.columnEstablishmentStatus = new global::System.Data.DataColumn("EstablishmentStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstablishmentStatus);
                this.columnInspectorObservation = new global::System.Data.DataColumn("InspectorObservation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectorObservation);
                this.columnDirectives = new global::System.Data.DataColumn("Directives", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectives);
                this.columnOVR = new global::System.Data.DataColumn("OVR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVR);
                this.columnRecommendations = new global::System.Data.DataColumn("Recommendations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommendations);
                this.columnInspector = new global::System.Data.DataColumn("Inspector", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspector);
                this.columnEncoder = new global::System.Data.DataColumn("Encoder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEncoder);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAccountNo}, true));
                this.columnAccountNo.AllowDBNull = false;
                this.columnAccountNo.Unique = true;
                this.columnAccountNo.MaxLength = 50;
                this.columnBusinessName.MaxLength = 2147483647;
                this.columnAddress.MaxLength = 2147483647;
                this.columnBarangay.MaxLength = 50;
                this.columnNatureOfBusiness.MaxLength = 2147483647;
                this.columnEstablishmentHas.MaxLength = 2147483647;
                this.columnBusinessStatus.MaxLength = 2147483647;
                this.columnEstablishmentIs.MaxLength = 2147483647;
                this.columnViolations.MaxLength = 2147483647;
                this.columnComplyWithin.MaxLength = 2147483647;
                this.columnSecuretheFF.MaxLength = 2147483647;
                this.columnAttendSeminar.MaxLength = 2147483647;
                this.columnMayorsPermit.MaxLength = 2147483647;
                this.columnEPPFee.MaxLength = 2147483647;
                this.columnECCCNC.MaxLength = 2147483647;
                this.columnECCCNCNo.MaxLength = 2147483647;
                this.columnWDP.MaxLength = 2147483647;
                this.columnWDPNo.MaxLength = 2147483647;
                this.columnPTO.MaxLength = 2147483647;
                this.columnPTONo.MaxLength = 2147483647;
                this.columnHWID.MaxLength = 2147483647;
                this.columnHWIDNo.MaxLength = 2147483647;
                this.columnHasPollutionOfficer.MaxLength = 2147483647;
                this.columnPollutionOfficer.MaxLength = 2147483647;
                this.columnAccreditation.MaxLength = 2147483647;
                this.columnContactNo.MaxLength = 2147483647;
                this.columnEmail.MaxLength = 2147483647;
                this.columnHasWasteBin.MaxLength = 2147483647;
                this.columnBinsLabeled.MaxLength = 2147483647;
                this.columnBinsCovered.MaxLength = 2147483647;
                this.columnBinsSegregated.MaxLength = 2147483647;
                this.columnMRF.MaxLength = 2147483647;
                this.columnWasteCollected.MaxLength = 2147483647;
                this.columnFrequencyHauling.MaxLength = 2147483647;
                this.columnHauler.MaxLength = 2147483647;
                this.columnHasSeptic.MaxLength = 2147483647;
                this.columnLocationSeptic.MaxLength = 2147483647;
                this.columnFrequencyDesludge.MaxLength = 2147483647;
                this.columnServiceProvider.MaxLength = 2147483647;
                this.columnHasGreaseTrap.MaxLength = 2147483647;
                this.columnLocationGrease.MaxLength = 2147483647;
                this.columnCapacityGreaseTrap.MaxLength = 2147483647;
                this.columnFrequencyGrease.MaxLength = 2147483647;
                this.columnHaulerGrease.MaxLength = 2147483647;
                this.columnHasWasteWater.MaxLength = 2147483647;
                this.columnUsedOilProperlyDisposed.MaxLength = 2147483647;
                this.columnTypeofOil.MaxLength = 2147483647;
                this.columnFrequencyofHaulingOil.MaxLength = 2147483647;
                this.columnHaulerOil.MaxLength = 2147483647;
                this.columnHasAirPollutionManager.MaxLength = 2147483647;
                this.columnDeviceType.MaxLength = 2147483647;
                this.columnMaintenanceProvider.MaxLength = 2147483647;
                this.columnPurposeOfInspection.MaxLength = 2147483647;
                this.columnLevelofInspection.MaxLength = 2147483647;
                this.columnLandUse.MaxLength = 2147483647;
                this.columnOwnershipTerms.MaxLength = 2147483647;
                this.columnLessee.MaxLength = 2147483647;
                this.columnStandAlone.MaxLength = 2147483647;
                this.columnEstablishmentStatus.MaxLength = 2147483647;
                this.columnInspectorObservation.MaxLength = 2147483647;
                this.columnDirectives.MaxLength = 2147483647;
                this.columnOVR.MaxLength = 2147483647;
                this.columnRecommendations.MaxLength = 2147483647;
                this.columnInspector.MaxLength = 2147483647;
                this.columnEncoder.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public InspectionReportRow NewInspectionReportRow() {
                return ((InspectionReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InspectionReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InspectionReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InspectionReportRowChanged != null)) {
                    this.InspectionReportRowChanged(this, new InspectionReportRowChangeEvent(((InspectionReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InspectionReportRowChanging != null)) {
                    this.InspectionReportRowChanging(this, new InspectionReportRowChangeEvent(((InspectionReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InspectionReportRowDeleted != null)) {
                    this.InspectionReportRowDeleted(this, new InspectionReportRowChangeEvent(((InspectionReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InspectionReportRowDeleting != null)) {
                    this.InspectionReportRowDeleting(this, new InspectionReportRowChangeEvent(((InspectionReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveInspectionReportRow(InspectionReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InspectionReportDataSet1 ds = new InspectionReportDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InspectionReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InspectionReportRow : global::System.Data.DataRow {
            
            private InspectionReportDataTable tableInspectionReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal InspectionReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInspectionReport = ((InspectionReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AccountNo {
                get {
                    return ((string)(this[this.tableInspectionReport.AccountNoColumn]));
                }
                set {
                    this[this.tableInspectionReport.AccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BusinessName {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.BusinessNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessName\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.BusinessNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Barangay {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.BarangayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barangay\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.BarangayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NatureOfBusiness {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.NatureOfBusinessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NatureOfBusiness\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.NatureOfBusinessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EstablishmentHas {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.EstablishmentHasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstablishmentHas\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.EstablishmentHasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BusinessStatus {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.BusinessStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessStatus\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.BusinessStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EstablishmentIs {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.EstablishmentIsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstablishmentIs\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.EstablishmentIsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Violations {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.ViolationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Violations\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ViolationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ComplyWithin {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.ComplyWithinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComplyWithin\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ComplyWithinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SecuretheFF {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.SecuretheFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecuretheFF\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.SecuretheFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AttendSeminar {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.AttendSeminarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendSeminar\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.AttendSeminarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MayorsPermit {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.MayorsPermitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MayorsPermit\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.MayorsPermitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EPPFee {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.EPPFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPPFee\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.EPPFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ECCCNC {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.ECCCNCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECCCNC\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ECCCNCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ECCCNCNo {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.ECCCNCNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECCCNCNo\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ECCCNCNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ECCDateIssued {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.ECCDateIssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECCDateIssued\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ECCDateIssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string WDP {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.WDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WDP\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.WDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string WDPNo {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.WDPNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WDPNo\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.WDPNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime WDPDateIssued {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.WDPDateIssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WDPDateIssued\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.WDPDateIssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PTO {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.PTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTO\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.PTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PTONo {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.PTONoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTONo\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.PTONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime PTODateIssued {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.PTODateIssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTODateIssued\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.PTODateIssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HWID {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HWIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HWID\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HWIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HWIDNo {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HWIDNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HWIDNo\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HWIDNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime HWIDDateIssued {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.HWIDDateIssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HWIDDateIssued\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HWIDDateIssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HasPollutionOfficer {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HasPollutionOfficerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasPollutionOfficer\' in table \'InspectionReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HasPollutionOfficerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PollutionOfficer {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.PollutionOfficerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PollutionOfficer\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.PollutionOfficerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Accreditation {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.AccreditationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Accreditation\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.AccreditationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ValidityOfPOC {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.ValidityOfPOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidityOfPOC\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ValidityOfPOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HasWasteBin {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HasWasteBinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasWasteBin\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HasWasteBinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BinsLabeled {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.BinsLabeledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BinsLabeled\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.BinsLabeledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BinsCovered {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.BinsCoveredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BinsCovered\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.BinsCoveredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BinsSegregated {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.BinsSegregatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BinsSegregated\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.BinsSegregatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MRF {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.MRFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRF\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.MRFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string WasteCollected {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.WasteCollectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WasteCollected\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.WasteCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FrequencyHauling {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.FrequencyHaulingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrequencyHauling\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.FrequencyHaulingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Hauler {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HaulerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hauler\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HaulerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HasSeptic {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HasSepticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasSeptic\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HasSepticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationSeptic {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.LocationSepticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationSeptic\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.LocationSepticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FrequencyDesludge {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.FrequencyDesludgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrequencyDesludge\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.FrequencyDesludgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DateDesludge {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.DateDesludgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateDesludge\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.DateDesludgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ServiceProvider {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.ServiceProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceProvider\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ServiceProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HasGreaseTrap {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HasGreaseTrapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasGreaseTrap\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HasGreaseTrapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationGrease {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.LocationGreaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationGrease\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.LocationGreaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CapacityGreaseTrap {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.CapacityGreaseTrapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CapacityGreaseTrap\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.CapacityGreaseTrapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FrequencyGrease {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.FrequencyGreaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrequencyGrease\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.FrequencyGreaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HaulerGrease {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HaulerGreaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HaulerGrease\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HaulerGreaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HasWasteWater {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HasWasteWaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasWasteWater\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HasWasteWaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UsedOilProperlyDisposed {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.UsedOilProperlyDisposedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsedOilProperlyDisposed\' in table \'InspectionReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.UsedOilProperlyDisposedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TypeofOil {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.TypeofOilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeofOil\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.TypeofOilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FrequencyofHaulingOil {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.FrequencyofHaulingOilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrequencyofHaulingOil\' in table \'InspectionReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.FrequencyofHaulingOilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HaulerOil {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HaulerOilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HaulerOil\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HaulerOilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HasAirPollutionManager {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.HasAirPollutionManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasAirPollutionManager\' in table \'InspectionReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.HasAirPollutionManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DeviceType {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.DeviceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeviceType\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.DeviceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MaintenanceProvider {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.MaintenanceProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintenanceProvider\' in table \'InspectionReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.MaintenanceProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PurposeOfInspection {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.PurposeOfInspectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurposeOfInspection\' in table \'InspectionReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.PurposeOfInspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ReinspectDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInspectionReport.ReinspectDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReinspectDate\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.ReinspectDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LevelofInspection {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.LevelofInspectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LevelofInspection\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.LevelofInspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LandUse {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.LandUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandUse\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.LandUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OwnershipTerms {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.OwnershipTermsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnershipTerms\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.OwnershipTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Lessee {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.LesseeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lessee\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.LesseeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string StandAlone {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.StandAloneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandAlone\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.StandAloneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EstablishmentStatus {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.EstablishmentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstablishmentStatus\' in table \'InspectionReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.EstablishmentStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InspectorObservation {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.InspectorObservationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspectorObservation\' in table \'InspectionReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.InspectorObservationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Directives {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.DirectivesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Directives\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.DirectivesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OVR {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.OVRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OVR\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.OVRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Recommendations {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.RecommendationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recommendations\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.RecommendationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Inspector {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.InspectorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inspector\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.InspectorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Encoder {
                get {
                    try {
                        return ((string)(this[this.tableInspectionReport.EncoderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Encoder\' in table \'InspectionReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInspectionReport.EncoderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBusinessNameNull() {
                return this.IsNull(this.tableInspectionReport.BusinessNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBusinessNameNull() {
                this[this.tableInspectionReport.BusinessNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableInspectionReport.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAddressNull() {
                this[this.tableInspectionReport.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBarangayNull() {
                return this.IsNull(this.tableInspectionReport.BarangayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBarangayNull() {
                this[this.tableInspectionReport.BarangayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tableInspectionReport.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDateNull() {
                this[this.tableInspectionReport.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNatureOfBusinessNull() {
                return this.IsNull(this.tableInspectionReport.NatureOfBusinessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNatureOfBusinessNull() {
                this[this.tableInspectionReport.NatureOfBusinessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEstablishmentHasNull() {
                return this.IsNull(this.tableInspectionReport.EstablishmentHasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEstablishmentHasNull() {
                this[this.tableInspectionReport.EstablishmentHasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBusinessStatusNull() {
                return this.IsNull(this.tableInspectionReport.BusinessStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBusinessStatusNull() {
                this[this.tableInspectionReport.BusinessStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEstablishmentIsNull() {
                return this.IsNull(this.tableInspectionReport.EstablishmentIsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEstablishmentIsNull() {
                this[this.tableInspectionReport.EstablishmentIsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsViolationsNull() {
                return this.IsNull(this.tableInspectionReport.ViolationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetViolationsNull() {
                this[this.tableInspectionReport.ViolationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsComplyWithinNull() {
                return this.IsNull(this.tableInspectionReport.ComplyWithinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetComplyWithinNull() {
                this[this.tableInspectionReport.ComplyWithinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSecuretheFFNull() {
                return this.IsNull(this.tableInspectionReport.SecuretheFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSecuretheFFNull() {
                this[this.tableInspectionReport.SecuretheFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAttendSeminarNull() {
                return this.IsNull(this.tableInspectionReport.AttendSeminarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAttendSeminarNull() {
                this[this.tableInspectionReport.AttendSeminarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMayorsPermitNull() {
                return this.IsNull(this.tableInspectionReport.MayorsPermitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMayorsPermitNull() {
                this[this.tableInspectionReport.MayorsPermitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEPPFeeNull() {
                return this.IsNull(this.tableInspectionReport.EPPFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEPPFeeNull() {
                this[this.tableInspectionReport.EPPFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsECCCNCNull() {
                return this.IsNull(this.tableInspectionReport.ECCCNCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetECCCNCNull() {
                this[this.tableInspectionReport.ECCCNCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsECCCNCNoNull() {
                return this.IsNull(this.tableInspectionReport.ECCCNCNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetECCCNCNoNull() {
                this[this.tableInspectionReport.ECCCNCNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsECCDateIssuedNull() {
                return this.IsNull(this.tableInspectionReport.ECCDateIssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetECCDateIssuedNull() {
                this[this.tableInspectionReport.ECCDateIssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWDPNull() {
                return this.IsNull(this.tableInspectionReport.WDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWDPNull() {
                this[this.tableInspectionReport.WDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWDPNoNull() {
                return this.IsNull(this.tableInspectionReport.WDPNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWDPNoNull() {
                this[this.tableInspectionReport.WDPNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWDPDateIssuedNull() {
                return this.IsNull(this.tableInspectionReport.WDPDateIssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWDPDateIssuedNull() {
                this[this.tableInspectionReport.WDPDateIssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPTONull() {
                return this.IsNull(this.tableInspectionReport.PTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPTONull() {
                this[this.tableInspectionReport.PTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPTONoNull() {
                return this.IsNull(this.tableInspectionReport.PTONoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPTONoNull() {
                this[this.tableInspectionReport.PTONoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPTODateIssuedNull() {
                return this.IsNull(this.tableInspectionReport.PTODateIssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPTODateIssuedNull() {
                this[this.tableInspectionReport.PTODateIssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHWIDNull() {
                return this.IsNull(this.tableInspectionReport.HWIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHWIDNull() {
                this[this.tableInspectionReport.HWIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHWIDNoNull() {
                return this.IsNull(this.tableInspectionReport.HWIDNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHWIDNoNull() {
                this[this.tableInspectionReport.HWIDNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHWIDDateIssuedNull() {
                return this.IsNull(this.tableInspectionReport.HWIDDateIssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHWIDDateIssuedNull() {
                this[this.tableInspectionReport.HWIDDateIssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHasPollutionOfficerNull() {
                return this.IsNull(this.tableInspectionReport.HasPollutionOfficerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHasPollutionOfficerNull() {
                this[this.tableInspectionReport.HasPollutionOfficerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPollutionOfficerNull() {
                return this.IsNull(this.tableInspectionReport.PollutionOfficerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPollutionOfficerNull() {
                this[this.tableInspectionReport.PollutionOfficerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAccreditationNull() {
                return this.IsNull(this.tableInspectionReport.AccreditationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAccreditationNull() {
                this[this.tableInspectionReport.AccreditationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsValidityOfPOCNull() {
                return this.IsNull(this.tableInspectionReport.ValidityOfPOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetValidityOfPOCNull() {
                this[this.tableInspectionReport.ValidityOfPOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContactNoNull() {
                return this.IsNull(this.tableInspectionReport.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContactNoNull() {
                this[this.tableInspectionReport.ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tableInspectionReport.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEmailNull() {
                this[this.tableInspectionReport.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHasWasteBinNull() {
                return this.IsNull(this.tableInspectionReport.HasWasteBinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHasWasteBinNull() {
                this[this.tableInspectionReport.HasWasteBinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBinsLabeledNull() {
                return this.IsNull(this.tableInspectionReport.BinsLabeledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBinsLabeledNull() {
                this[this.tableInspectionReport.BinsLabeledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBinsCoveredNull() {
                return this.IsNull(this.tableInspectionReport.BinsCoveredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBinsCoveredNull() {
                this[this.tableInspectionReport.BinsCoveredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBinsSegregatedNull() {
                return this.IsNull(this.tableInspectionReport.BinsSegregatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBinsSegregatedNull() {
                this[this.tableInspectionReport.BinsSegregatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMRFNull() {
                return this.IsNull(this.tableInspectionReport.MRFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMRFNull() {
                this[this.tableInspectionReport.MRFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWasteCollectedNull() {
                return this.IsNull(this.tableInspectionReport.WasteCollectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWasteCollectedNull() {
                this[this.tableInspectionReport.WasteCollectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFrequencyHaulingNull() {
                return this.IsNull(this.tableInspectionReport.FrequencyHaulingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFrequencyHaulingNull() {
                this[this.tableInspectionReport.FrequencyHaulingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHaulerNull() {
                return this.IsNull(this.tableInspectionReport.HaulerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHaulerNull() {
                this[this.tableInspectionReport.HaulerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHasSepticNull() {
                return this.IsNull(this.tableInspectionReport.HasSepticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHasSepticNull() {
                this[this.tableInspectionReport.HasSepticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocationSepticNull() {
                return this.IsNull(this.tableInspectionReport.LocationSepticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocationSepticNull() {
                this[this.tableInspectionReport.LocationSepticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFrequencyDesludgeNull() {
                return this.IsNull(this.tableInspectionReport.FrequencyDesludgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFrequencyDesludgeNull() {
                this[this.tableInspectionReport.FrequencyDesludgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDateDesludgeNull() {
                return this.IsNull(this.tableInspectionReport.DateDesludgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDateDesludgeNull() {
                this[this.tableInspectionReport.DateDesludgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsServiceProviderNull() {
                return this.IsNull(this.tableInspectionReport.ServiceProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetServiceProviderNull() {
                this[this.tableInspectionReport.ServiceProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHasGreaseTrapNull() {
                return this.IsNull(this.tableInspectionReport.HasGreaseTrapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHasGreaseTrapNull() {
                this[this.tableInspectionReport.HasGreaseTrapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocationGreaseNull() {
                return this.IsNull(this.tableInspectionReport.LocationGreaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocationGreaseNull() {
                this[this.tableInspectionReport.LocationGreaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCapacityGreaseTrapNull() {
                return this.IsNull(this.tableInspectionReport.CapacityGreaseTrapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCapacityGreaseTrapNull() {
                this[this.tableInspectionReport.CapacityGreaseTrapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFrequencyGreaseNull() {
                return this.IsNull(this.tableInspectionReport.FrequencyGreaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFrequencyGreaseNull() {
                this[this.tableInspectionReport.FrequencyGreaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHaulerGreaseNull() {
                return this.IsNull(this.tableInspectionReport.HaulerGreaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHaulerGreaseNull() {
                this[this.tableInspectionReport.HaulerGreaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHasWasteWaterNull() {
                return this.IsNull(this.tableInspectionReport.HasWasteWaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHasWasteWaterNull() {
                this[this.tableInspectionReport.HasWasteWaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUsedOilProperlyDisposedNull() {
                return this.IsNull(this.tableInspectionReport.UsedOilProperlyDisposedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUsedOilProperlyDisposedNull() {
                this[this.tableInspectionReport.UsedOilProperlyDisposedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTypeofOilNull() {
                return this.IsNull(this.tableInspectionReport.TypeofOilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTypeofOilNull() {
                this[this.tableInspectionReport.TypeofOilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFrequencyofHaulingOilNull() {
                return this.IsNull(this.tableInspectionReport.FrequencyofHaulingOilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFrequencyofHaulingOilNull() {
                this[this.tableInspectionReport.FrequencyofHaulingOilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHaulerOilNull() {
                return this.IsNull(this.tableInspectionReport.HaulerOilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHaulerOilNull() {
                this[this.tableInspectionReport.HaulerOilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHasAirPollutionManagerNull() {
                return this.IsNull(this.tableInspectionReport.HasAirPollutionManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHasAirPollutionManagerNull() {
                this[this.tableInspectionReport.HasAirPollutionManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDeviceTypeNull() {
                return this.IsNull(this.tableInspectionReport.DeviceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDeviceTypeNull() {
                this[this.tableInspectionReport.DeviceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMaintenanceProviderNull() {
                return this.IsNull(this.tableInspectionReport.MaintenanceProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMaintenanceProviderNull() {
                this[this.tableInspectionReport.MaintenanceProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPurposeOfInspectionNull() {
                return this.IsNull(this.tableInspectionReport.PurposeOfInspectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPurposeOfInspectionNull() {
                this[this.tableInspectionReport.PurposeOfInspectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReinspectDateNull() {
                return this.IsNull(this.tableInspectionReport.ReinspectDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReinspectDateNull() {
                this[this.tableInspectionReport.ReinspectDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLevelofInspectionNull() {
                return this.IsNull(this.tableInspectionReport.LevelofInspectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLevelofInspectionNull() {
                this[this.tableInspectionReport.LevelofInspectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLandUseNull() {
                return this.IsNull(this.tableInspectionReport.LandUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLandUseNull() {
                this[this.tableInspectionReport.LandUseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOwnershipTermsNull() {
                return this.IsNull(this.tableInspectionReport.OwnershipTermsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOwnershipTermsNull() {
                this[this.tableInspectionReport.OwnershipTermsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLesseeNull() {
                return this.IsNull(this.tableInspectionReport.LesseeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLesseeNull() {
                this[this.tableInspectionReport.LesseeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStandAloneNull() {
                return this.IsNull(this.tableInspectionReport.StandAloneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStandAloneNull() {
                this[this.tableInspectionReport.StandAloneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEstablishmentStatusNull() {
                return this.IsNull(this.tableInspectionReport.EstablishmentStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEstablishmentStatusNull() {
                this[this.tableInspectionReport.EstablishmentStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInspectorObservationNull() {
                return this.IsNull(this.tableInspectionReport.InspectorObservationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInspectorObservationNull() {
                this[this.tableInspectionReport.InspectorObservationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDirectivesNull() {
                return this.IsNull(this.tableInspectionReport.DirectivesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDirectivesNull() {
                this[this.tableInspectionReport.DirectivesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOVRNull() {
                return this.IsNull(this.tableInspectionReport.OVRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOVRNull() {
                this[this.tableInspectionReport.OVRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRecommendationsNull() {
                return this.IsNull(this.tableInspectionReport.RecommendationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRecommendationsNull() {
                this[this.tableInspectionReport.RecommendationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInspectorNull() {
                return this.IsNull(this.tableInspectionReport.InspectorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInspectorNull() {
                this[this.tableInspectionReport.InspectorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEncoderNull() {
                return this.IsNull(this.tableInspectionReport.EncoderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEncoderNull() {
                this[this.tableInspectionReport.EncoderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class InspectionReportRowChangeEvent : global::System.EventArgs {
            
            private InspectionReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public InspectionReportRowChangeEvent(InspectionReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public InspectionReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace InspectionReportWebApp.InspectionReportDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class InspectionReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public InspectionReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "InspectionReport";
            tableMapping.ColumnMappings.Add("AccountNo", "AccountNo");
            tableMapping.ColumnMappings.Add("BusinessName", "BusinessName");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("Barangay", "Barangay");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("NatureOfBusiness", "NatureOfBusiness");
            tableMapping.ColumnMappings.Add("EstablishmentHas", "EstablishmentHas");
            tableMapping.ColumnMappings.Add("BusinessStatus", "BusinessStatus");
            tableMapping.ColumnMappings.Add("EstablishmentIs", "EstablishmentIs");
            tableMapping.ColumnMappings.Add("Violations", "Violations");
            tableMapping.ColumnMappings.Add("ComplyWithin", "ComplyWithin");
            tableMapping.ColumnMappings.Add("SecuretheFF", "SecuretheFF");
            tableMapping.ColumnMappings.Add("AttendSeminar", "AttendSeminar");
            tableMapping.ColumnMappings.Add("MayorsPermit", "MayorsPermit");
            tableMapping.ColumnMappings.Add("EPPFee", "EPPFee");
            tableMapping.ColumnMappings.Add("ECCCNC", "ECCCNC");
            tableMapping.ColumnMappings.Add("ECCCNCNo", "ECCCNCNo");
            tableMapping.ColumnMappings.Add("ECCDateIssued", "ECCDateIssued");
            tableMapping.ColumnMappings.Add("WDP", "WDP");
            tableMapping.ColumnMappings.Add("WDPNo", "WDPNo");
            tableMapping.ColumnMappings.Add("WDPDateIssued", "WDPDateIssued");
            tableMapping.ColumnMappings.Add("PTO", "PTO");
            tableMapping.ColumnMappings.Add("PTONo", "PTONo");
            tableMapping.ColumnMappings.Add("PTODateIssued", "PTODateIssued");
            tableMapping.ColumnMappings.Add("HWID", "HWID");
            tableMapping.ColumnMappings.Add("HWIDNo", "HWIDNo");
            tableMapping.ColumnMappings.Add("HWIDDateIssued", "HWIDDateIssued");
            tableMapping.ColumnMappings.Add("HasPollutionOfficer", "HasPollutionOfficer");
            tableMapping.ColumnMappings.Add("PollutionOfficer", "PollutionOfficer");
            tableMapping.ColumnMappings.Add("Accreditation", "Accreditation");
            tableMapping.ColumnMappings.Add("ValidityOfPOC", "ValidityOfPOC");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("HasWasteBin", "HasWasteBin");
            tableMapping.ColumnMappings.Add("BinsLabeled", "BinsLabeled");
            tableMapping.ColumnMappings.Add("BinsCovered", "BinsCovered");
            tableMapping.ColumnMappings.Add("BinsSegregated", "BinsSegregated");
            tableMapping.ColumnMappings.Add("MRF", "MRF");
            tableMapping.ColumnMappings.Add("WasteCollected", "WasteCollected");
            tableMapping.ColumnMappings.Add("FrequencyHauling", "FrequencyHauling");
            tableMapping.ColumnMappings.Add("Hauler", "Hauler");
            tableMapping.ColumnMappings.Add("HasSeptic", "HasSeptic");
            tableMapping.ColumnMappings.Add("LocationSeptic", "LocationSeptic");
            tableMapping.ColumnMappings.Add("FrequencyDesludge", "FrequencyDesludge");
            tableMapping.ColumnMappings.Add("DateDesludge", "DateDesludge");
            tableMapping.ColumnMappings.Add("ServiceProvider", "ServiceProvider");
            tableMapping.ColumnMappings.Add("HasGreaseTrap", "HasGreaseTrap");
            tableMapping.ColumnMappings.Add("LocationGrease", "LocationGrease");
            tableMapping.ColumnMappings.Add("CapacityGreaseTrap", "CapacityGreaseTrap");
            tableMapping.ColumnMappings.Add("FrequencyGrease", "FrequencyGrease");
            tableMapping.ColumnMappings.Add("HaulerGrease", "HaulerGrease");
            tableMapping.ColumnMappings.Add("HasWasteWater", "HasWasteWater");
            tableMapping.ColumnMappings.Add("UsedOilProperlyDisposed", "UsedOilProperlyDisposed");
            tableMapping.ColumnMappings.Add("TypeofOil", "TypeofOil");
            tableMapping.ColumnMappings.Add("FrequencyofHaulingOil", "FrequencyofHaulingOil");
            tableMapping.ColumnMappings.Add("HaulerOil", "HaulerOil");
            tableMapping.ColumnMappings.Add("HasAirPollutionManager", "HasAirPollutionManager");
            tableMapping.ColumnMappings.Add("DeviceType", "DeviceType");
            tableMapping.ColumnMappings.Add("MaintenanceProvider", "MaintenanceProvider");
            tableMapping.ColumnMappings.Add("PurposeOfInspection", "PurposeOfInspection");
            tableMapping.ColumnMappings.Add("ReinspectDate", "ReinspectDate");
            tableMapping.ColumnMappings.Add("LevelofInspection", "LevelofInspection");
            tableMapping.ColumnMappings.Add("LandUse", "LandUse");
            tableMapping.ColumnMappings.Add("OwnershipTerms", "OwnershipTerms");
            tableMapping.ColumnMappings.Add("Lessee", "Lessee");
            tableMapping.ColumnMappings.Add("StandAlone", "StandAlone");
            tableMapping.ColumnMappings.Add("EstablishmentStatus", "EstablishmentStatus");
            tableMapping.ColumnMappings.Add("InspectorObservation", "InspectorObservation");
            tableMapping.ColumnMappings.Add("Directives", "Directives");
            tableMapping.ColumnMappings.Add("OVR", "OVR");
            tableMapping.ColumnMappings.Add("Recommendations", "Recommendations");
            tableMapping.ColumnMappings.Add("Inspector", "Inspector");
            tableMapping.ColumnMappings.Add("Encoder", "Encoder");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[InspectionReport] WHERE (([AccountNo] = @Original_AccountNo) AND ((@IsNull_Barangay = 1 AND [Barangay] IS NULL) OR ([Barangay] = @Original_Barangay)) AND ((@IsNull_Date = 1 AND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_ECCDateIssued = 1 AND [ECCDateIssued] IS NULL) OR ([ECCDateIssued] = @Original_ECCDateIssued)) AND ((@IsNull_WDPDateIssued = 1 AND [WDPDateIssued] IS NULL) OR ([WDPDateIssued] = @Original_WDPDateIssued)) AND ((@IsNull_PTODateIssued = 1 AND [PTODateIssued] IS NULL) OR ([PTODateIssued] = @Original_PTODateIssued)) AND ((@IsNull_HWIDDateIssued = 1 AND [HWIDDateIssued] IS NULL) OR ([HWIDDateIssued] = @Original_HWIDDateIssued)) AND ((@IsNull_ValidityOfPOC = 1 AND [ValidityOfPOC] IS NULL) OR ([ValidityOfPOC] = @Original_ValidityOfPOC)) AND ((@IsNull_DateDesludge = 1 AND [DateDesludge] IS NULL) OR ([DateDesludge] = @Original_DateDesludge)) AND ((@IsNull_ReinspectDate = 1 AND [ReinspectDate] IS NULL) OR ([ReinspectDate] = @Original_ReinspectDate)) AND ((@IsNull_Encoder = 1 AND [Encoder] IS NULL) OR ([Encoder] = @Original_Encoder)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Barangay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Barangay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Barangay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Barangay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ECCDateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCDateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ECCDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCDateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WDPDateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPDateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WDPDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPDateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PTODateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTODateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PTODateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTODateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HWIDDateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDDateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HWIDDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDDateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValidityOfPOC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityOfPOC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValidityOfPOC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityOfPOC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateDesludge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDesludge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateDesludge", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDesludge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReinspectDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReinspectDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReinspectDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReinspectDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Encoder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Encoder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Encoder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Encoder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[InspectionReport] ([AccountNo], [BusinessName], [Address], [Ba" +
                "rangay], [Date], [NatureOfBusiness], [EstablishmentHas], [BusinessStatus], [Esta" +
                "blishmentIs], [Violations], [ComplyWithin], [SecuretheFF], [AttendSeminar], [May" +
                "orsPermit], [EPPFee], [ECCCNC], [ECCCNCNo], [ECCDateIssued], [WDP], [WDPNo], [WD" +
                "PDateIssued], [PTO], [PTONo], [PTODateIssued], [HWID], [HWIDNo], [HWIDDateIssued" +
                "], [HasPollutionOfficer], [PollutionOfficer], [Accreditation], [ValidityOfPOC], " +
                "[ContactNo], [Email], [HasWasteBin], [BinsLabeled], [BinsCovered], [BinsSegregat" +
                "ed], [MRF], [WasteCollected], [FrequencyHauling], [Hauler], [HasSeptic], [Locati" +
                "onSeptic], [FrequencyDesludge], [DateDesludge], [ServiceProvider], [HasGreaseTra" +
                "p], [LocationGrease], [CapacityGreaseTrap], [FrequencyGrease], [HaulerGrease], [" +
                "HasWasteWater], [UsedOilProperlyDisposed], [TypeofOil], [FrequencyofHaulingOil]," +
                " [HaulerOil], [HasAirPollutionManager], [DeviceType], [MaintenanceProvider], [Pu" +
                "rposeOfInspection], [ReinspectDate], [LevelofInspection], [LandUse], [OwnershipT" +
                "erms], [Lessee], [StandAlone], [EstablishmentStatus], [InspectorObservation], [D" +
                "irectives], [OVR], [Recommendations], [Inspector], [Encoder]) VALUES (@AccountNo" +
                ", @BusinessName, @Address, @Barangay, @Date, @NatureOfBusiness, @EstablishmentHa" +
                "s, @BusinessStatus, @EstablishmentIs, @Violations, @ComplyWithin, @SecuretheFF, " +
                "@AttendSeminar, @MayorsPermit, @EPPFee, @ECCCNC, @ECCCNCNo, @ECCDateIssued, @WDP" +
                ", @WDPNo, @WDPDateIssued, @PTO, @PTONo, @PTODateIssued, @HWID, @HWIDNo, @HWIDDat" +
                "eIssued, @HasPollutionOfficer, @PollutionOfficer, @Accreditation, @ValidityOfPOC" +
                ", @ContactNo, @Email, @HasWasteBin, @BinsLabeled, @BinsCovered, @BinsSegregated," +
                " @MRF, @WasteCollected, @FrequencyHauling, @Hauler, @HasSeptic, @LocationSeptic," +
                " @FrequencyDesludge, @DateDesludge, @ServiceProvider, @HasGreaseTrap, @LocationG" +
                "rease, @CapacityGreaseTrap, @FrequencyGrease, @HaulerGrease, @HasWasteWater, @Us" +
                "edOilProperlyDisposed, @TypeofOil, @FrequencyofHaulingOil, @HaulerOil, @HasAirPo" +
                "llutionManager, @DeviceType, @MaintenanceProvider, @PurposeOfInspection, @Reinsp" +
                "ectDate, @LevelofInspection, @LandUse, @OwnershipTerms, @Lessee, @StandAlone, @E" +
                "stablishmentStatus, @InspectorObservation, @Directives, @OVR, @Recommendations, " +
                "@Inspector, @Encoder);\r\nSELECT AccountNo, BusinessName, Address, Barangay, Date," +
                " NatureOfBusiness, EstablishmentHas, BusinessStatus, EstablishmentIs, Violations" +
                ", ComplyWithin, SecuretheFF, AttendSeminar, MayorsPermit, EPPFee, ECCCNC, ECCCNC" +
                "No, ECCDateIssued, WDP, WDPNo, WDPDateIssued, PTO, PTONo, PTODateIssued, HWID, H" +
                "WIDNo, HWIDDateIssued, HasPollutionOfficer, PollutionOfficer, Accreditation, Val" +
                "idityOfPOC, ContactNo, Email, HasWasteBin, BinsLabeled, BinsCovered, BinsSegrega" +
                "ted, MRF, WasteCollected, FrequencyHauling, Hauler, HasSeptic, LocationSeptic, F" +
                "requencyDesludge, DateDesludge, ServiceProvider, HasGreaseTrap, LocationGrease, " +
                "CapacityGreaseTrap, FrequencyGrease, HaulerGrease, HasWasteWater, UsedOilProperl" +
                "yDisposed, TypeofOil, FrequencyofHaulingOil, HaulerOil, HasAirPollutionManager, " +
                "DeviceType, MaintenanceProvider, PurposeOfInspection, ReinspectDate, LevelofInsp" +
                "ection, LandUse, OwnershipTerms, Lessee, StandAlone, EstablishmentStatus, Inspec" +
                "torObservation, Directives, OVR, Recommendations, Inspector, Encoder FROM Inspec" +
                "tionReport WHERE (AccountNo = @AccountNo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Barangay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Barangay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NatureOfBusiness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NatureOfBusiness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstablishmentHas", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstablishmentHas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstablishmentIs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstablishmentIs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Violations", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Violations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComplyWithin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComplyWithin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecuretheFF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecuretheFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendSeminar", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendSeminar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MayorsPermit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MayorsPermit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPPFee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPPFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ECCCNC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCCNC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ECCCNCNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCCNCNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ECCDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCDateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WDP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WDPNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WDPDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPDateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTONo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTONo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTODateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTODateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HWID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HWIDNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HWIDDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDDateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasPollutionOfficer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasPollutionOfficer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PollutionOfficer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PollutionOfficer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Accreditation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accreditation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidityOfPOC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityOfPOC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasWasteBin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasWasteBin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BinsLabeled", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BinsLabeled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BinsCovered", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BinsCovered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BinsSegregated", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BinsSegregated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MRF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WasteCollected", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WasteCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyHauling", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyHauling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hauler", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hauler", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasSeptic", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasSeptic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationSeptic", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationSeptic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyDesludge", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyDesludge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateDesludge", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDesludge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceProvider", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceProvider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasGreaseTrap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasGreaseTrap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationGrease", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGrease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapacityGreaseTrap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapacityGreaseTrap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyGrease", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyGrease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HaulerGrease", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HaulerGrease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasWasteWater", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasWasteWater", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsedOilProperlyDisposed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UsedOilProperlyDisposed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeofOil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeofOil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyofHaulingOil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyofHaulingOil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HaulerOil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HaulerOil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAirPollutionManager", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAirPollutionManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeviceType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeviceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaintenanceProvider", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaintenanceProvider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PurposeOfInspection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurposeOfInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReinspectDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReinspectDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LevelofInspection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LevelofInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LandUse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LandUse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OwnershipTerms", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnershipTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lessee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lessee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StandAlone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandAlone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstablishmentStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstablishmentStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectorObservation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectorObservation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Directives", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Directives", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recommendations", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recommendations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inspector", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Encoder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Encoder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[InspectionReport] SET [AccountNo] = @AccountNo, [BusinessName] = @B" +
                "usinessName, [Address] = @Address, [Barangay] = @Barangay, [Date] = @Date, [Natu" +
                "reOfBusiness] = @NatureOfBusiness, [EstablishmentHas] = @EstablishmentHas, [Busi" +
                "nessStatus] = @BusinessStatus, [EstablishmentIs] = @EstablishmentIs, [Violations" +
                "] = @Violations, [ComplyWithin] = @ComplyWithin, [SecuretheFF] = @SecuretheFF, [" +
                "AttendSeminar] = @AttendSeminar, [MayorsPermit] = @MayorsPermit, [EPPFee] = @EPP" +
                "Fee, [ECCCNC] = @ECCCNC, [ECCCNCNo] = @ECCCNCNo, [ECCDateIssued] = @ECCDateIssue" +
                "d, [WDP] = @WDP, [WDPNo] = @WDPNo, [WDPDateIssued] = @WDPDateIssued, [PTO] = @PT" +
                "O, [PTONo] = @PTONo, [PTODateIssued] = @PTODateIssued, [HWID] = @HWID, [HWIDNo] " +
                "= @HWIDNo, [HWIDDateIssued] = @HWIDDateIssued, [HasPollutionOfficer] = @HasPollu" +
                "tionOfficer, [PollutionOfficer] = @PollutionOfficer, [Accreditation] = @Accredit" +
                "ation, [ValidityOfPOC] = @ValidityOfPOC, [ContactNo] = @ContactNo, [Email] = @Em" +
                "ail, [HasWasteBin] = @HasWasteBin, [BinsLabeled] = @BinsLabeled, [BinsCovered] =" +
                " @BinsCovered, [BinsSegregated] = @BinsSegregated, [MRF] = @MRF, [WasteCollected" +
                "] = @WasteCollected, [FrequencyHauling] = @FrequencyHauling, [Hauler] = @Hauler," +
                " [HasSeptic] = @HasSeptic, [LocationSeptic] = @LocationSeptic, [FrequencyDesludg" +
                "e] = @FrequencyDesludge, [DateDesludge] = @DateDesludge, [ServiceProvider] = @Se" +
                "rviceProvider, [HasGreaseTrap] = @HasGreaseTrap, [LocationGrease] = @LocationGre" +
                "ase, [CapacityGreaseTrap] = @CapacityGreaseTrap, [FrequencyGrease] = @FrequencyG" +
                "rease, [HaulerGrease] = @HaulerGrease, [HasWasteWater] = @HasWasteWater, [UsedOi" +
                "lProperlyDisposed] = @UsedOilProperlyDisposed, [TypeofOil] = @TypeofOil, [Freque" +
                "ncyofHaulingOil] = @FrequencyofHaulingOil, [HaulerOil] = @HaulerOil, [HasAirPoll" +
                "utionManager] = @HasAirPollutionManager, [DeviceType] = @DeviceType, [Maintenanc" +
                "eProvider] = @MaintenanceProvider, [PurposeOfInspection] = @PurposeOfInspection," +
                " [ReinspectDate] = @ReinspectDate, [LevelofInspection] = @LevelofInspection, [La" +
                "ndUse] = @LandUse, [OwnershipTerms] = @OwnershipTerms, [Lessee] = @Lessee, [Stan" +
                "dAlone] = @StandAlone, [EstablishmentStatus] = @EstablishmentStatus, [InspectorO" +
                "bservation] = @InspectorObservation, [Directives] = @Directives, [OVR] = @OVR, [" +
                "Recommendations] = @Recommendations, [Inspector] = @Inspector, [Encoder] = @Enco" +
                "der WHERE (([AccountNo] = @Original_AccountNo) AND ((@IsNull_Barangay = 1 AND [B" +
                "arangay] IS NULL) OR ([Barangay] = @Original_Barangay)) AND ((@IsNull_Date = 1 A" +
                "ND [Date] IS NULL) OR ([Date] = @Original_Date)) AND ((@IsNull_ECCDateIssued = 1" +
                " AND [ECCDateIssued] IS NULL) OR ([ECCDateIssued] = @Original_ECCDateIssued)) AN" +
                "D ((@IsNull_WDPDateIssued = 1 AND [WDPDateIssued] IS NULL) OR ([WDPDateIssued] =" +
                " @Original_WDPDateIssued)) AND ((@IsNull_PTODateIssued = 1 AND [PTODateIssued] I" +
                "S NULL) OR ([PTODateIssued] = @Original_PTODateIssued)) AND ((@IsNull_HWIDDateIs" +
                "sued = 1 AND [HWIDDateIssued] IS NULL) OR ([HWIDDateIssued] = @Original_HWIDDate" +
                "Issued)) AND ((@IsNull_ValidityOfPOC = 1 AND [ValidityOfPOC] IS NULL) OR ([Valid" +
                "ityOfPOC] = @Original_ValidityOfPOC)) AND ((@IsNull_DateDesludge = 1 AND [DateDe" +
                "sludge] IS NULL) OR ([DateDesludge] = @Original_DateDesludge)) AND ((@IsNull_Rei" +
                "nspectDate = 1 AND [ReinspectDate] IS NULL) OR ([ReinspectDate] = @Original_Rein" +
                "spectDate)) AND ((@IsNull_Encoder = 1 AND [Encoder] IS NULL) OR ([Encoder] = @Or" +
                "iginal_Encoder)));\r\nSELECT AccountNo, BusinessName, Address, Barangay, Date, Nat" +
                "ureOfBusiness, EstablishmentHas, BusinessStatus, EstablishmentIs, Violations, Co" +
                "mplyWithin, SecuretheFF, AttendSeminar, MayorsPermit, EPPFee, ECCCNC, ECCCNCNo, " +
                "ECCDateIssued, WDP, WDPNo, WDPDateIssued, PTO, PTONo, PTODateIssued, HWID, HWIDN" +
                "o, HWIDDateIssued, HasPollutionOfficer, PollutionOfficer, Accreditation, Validit" +
                "yOfPOC, ContactNo, Email, HasWasteBin, BinsLabeled, BinsCovered, BinsSegregated," +
                " MRF, WasteCollected, FrequencyHauling, Hauler, HasSeptic, LocationSeptic, Frequ" +
                "encyDesludge, DateDesludge, ServiceProvider, HasGreaseTrap, LocationGrease, Capa" +
                "cityGreaseTrap, FrequencyGrease, HaulerGrease, HasWasteWater, UsedOilProperlyDis" +
                "posed, TypeofOil, FrequencyofHaulingOil, HaulerOil, HasAirPollutionManager, Devi" +
                "ceType, MaintenanceProvider, PurposeOfInspection, ReinspectDate, LevelofInspecti" +
                "on, LandUse, OwnershipTerms, Lessee, StandAlone, EstablishmentStatus, InspectorO" +
                "bservation, Directives, OVR, Recommendations, Inspector, Encoder FROM Inspection" +
                "Report WHERE (AccountNo = @AccountNo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Barangay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Barangay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NatureOfBusiness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NatureOfBusiness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstablishmentHas", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstablishmentHas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BusinessStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BusinessStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstablishmentIs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstablishmentIs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Violations", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Violations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComplyWithin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComplyWithin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecuretheFF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecuretheFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendSeminar", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendSeminar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MayorsPermit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MayorsPermit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPPFee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPPFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ECCCNC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCCNC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ECCCNCNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCCNCNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ECCDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCDateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WDP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WDPNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WDPDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPDateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTONo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTONo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTODateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTODateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HWID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HWIDNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HWIDDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDDateIssued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasPollutionOfficer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasPollutionOfficer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PollutionOfficer", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PollutionOfficer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Accreditation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accreditation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidityOfPOC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityOfPOC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasWasteBin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasWasteBin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BinsLabeled", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BinsLabeled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BinsCovered", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BinsCovered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BinsSegregated", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BinsSegregated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MRF", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WasteCollected", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WasteCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyHauling", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyHauling", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hauler", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hauler", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasSeptic", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasSeptic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationSeptic", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationSeptic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyDesludge", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyDesludge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateDesludge", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDesludge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceProvider", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceProvider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasGreaseTrap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasGreaseTrap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationGrease", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationGrease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CapacityGreaseTrap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CapacityGreaseTrap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyGrease", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyGrease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HaulerGrease", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HaulerGrease", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasWasteWater", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasWasteWater", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsedOilProperlyDisposed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UsedOilProperlyDisposed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeofOil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeofOil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FrequencyofHaulingOil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FrequencyofHaulingOil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HaulerOil", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HaulerOil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasAirPollutionManager", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasAirPollutionManager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeviceType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeviceType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaintenanceProvider", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaintenanceProvider", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PurposeOfInspection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PurposeOfInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReinspectDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReinspectDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LevelofInspection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LevelofInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LandUse", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LandUse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OwnershipTerms", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnershipTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lessee", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lessee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StandAlone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StandAlone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EstablishmentStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EstablishmentStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectorObservation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectorObservation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Directives", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Directives", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recommendations", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recommendations", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inspector", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inspector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Encoder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Encoder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Barangay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Barangay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Barangay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Barangay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ECCDateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCDateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ECCDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ECCDateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WDPDateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPDateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WDPDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WDPDateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PTODateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTODateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PTODateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTODateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HWIDDateIssued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDDateIssued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HWIDDateIssued", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HWIDDateIssued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValidityOfPOC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityOfPOC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValidityOfPOC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityOfPOC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateDesludge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDesludge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateDesludge", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateDesludge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReinspectDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReinspectDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReinspectDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReinspectDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Encoder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Encoder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Encoder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Encoder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::InspectionReportWebApp.Properties.Settings.Default.InspectionReportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT AccountNo, BusinessName, Address, Barangay, Date, NatureOfBusiness, EstablishmentHas, BusinessStatus, EstablishmentIs, Violations, ComplyWithin, SecuretheFF, AttendSeminar, MayorsPermit, EPPFee, ECCCNC, ECCCNCNo, ECCDateIssued, WDP, WDPNo, WDPDateIssued, PTO, PTONo, PTODateIssued, HWID, HWIDNo, HWIDDateIssued, HasPollutionOfficer, PollutionOfficer, Accreditation, ValidityOfPOC, ContactNo, Email, HasWasteBin, BinsLabeled, BinsCovered, BinsSegregated, MRF, WasteCollected, FrequencyHauling, Hauler, HasSeptic, LocationSeptic, FrequencyDesludge, DateDesludge, ServiceProvider, HasGreaseTrap, LocationGrease, CapacityGreaseTrap, FrequencyGrease, HaulerGrease, HasWasteWater, UsedOilProperlyDisposed, TypeofOil, FrequencyofHaulingOil, HaulerOil, HasAirPollutionManager, DeviceType, MaintenanceProvider, PurposeOfInspection, ReinspectDate, LevelofInspection, LandUse, OwnershipTerms, Lessee, StandAlone, EstablishmentStatus, InspectorObservation, Directives, OVR, Recommendations, Inspector, Encoder FROM dbo.InspectionReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InspectionReportDataSet1.InspectionReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InspectionReportDataSet1.InspectionReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InspectionReportDataSet1.InspectionReportDataTable dataTable = new InspectionReportDataSet1.InspectionReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InspectionReportDataSet1.InspectionReportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InspectionReportDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "InspectionReport");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_AccountNo, string Original_Barangay, global::System.Nullable<global::System.DateTime> Original_Date, global::System.Nullable<global::System.DateTime> Original_ECCDateIssued, global::System.Nullable<global::System.DateTime> Original_WDPDateIssued, global::System.Nullable<global::System.DateTime> Original_PTODateIssued, global::System.Nullable<global::System.DateTime> Original_HWIDDateIssued, global::System.Nullable<global::System.DateTime> Original_ValidityOfPOC, global::System.Nullable<global::System.DateTime> Original_DateDesludge, global::System.Nullable<global::System.DateTime> Original_ReinspectDate, string Original_Encoder) {
            if ((Original_AccountNo == null)) {
                throw new global::System.ArgumentNullException("Original_AccountNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_AccountNo));
            }
            if ((Original_Barangay == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Barangay));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ECCDateIssued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ECCDateIssued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_WDPDateIssued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_WDPDateIssued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_PTODateIssued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_PTODateIssued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_HWIDDateIssued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_HWIDDateIssued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ValidityOfPOC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_ValidityOfPOC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_DateDesludge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_DateDesludge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_ReinspectDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_ReinspectDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Encoder == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Encoder));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string AccountNo, 
                    string BusinessName, 
                    string Address, 
                    string Barangay, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string NatureOfBusiness, 
                    string EstablishmentHas, 
                    string BusinessStatus, 
                    string EstablishmentIs, 
                    string Violations, 
                    string ComplyWithin, 
                    string SecuretheFF, 
                    string AttendSeminar, 
                    string MayorsPermit, 
                    string EPPFee, 
                    string ECCCNC, 
                    string ECCCNCNo, 
                    global::System.Nullable<global::System.DateTime> ECCDateIssued, 
                    string WDP, 
                    string WDPNo, 
                    global::System.Nullable<global::System.DateTime> WDPDateIssued, 
                    string PTO, 
                    string PTONo, 
                    global::System.Nullable<global::System.DateTime> PTODateIssued, 
                    string HWID, 
                    string HWIDNo, 
                    global::System.Nullable<global::System.DateTime> HWIDDateIssued, 
                    string HasPollutionOfficer, 
                    string PollutionOfficer, 
                    string Accreditation, 
                    global::System.Nullable<global::System.DateTime> ValidityOfPOC, 
                    string ContactNo, 
                    string Email, 
                    string HasWasteBin, 
                    string BinsLabeled, 
                    string BinsCovered, 
                    string BinsSegregated, 
                    string MRF, 
                    string WasteCollected, 
                    string FrequencyHauling, 
                    string Hauler, 
                    string HasSeptic, 
                    string LocationSeptic, 
                    string FrequencyDesludge, 
                    global::System.Nullable<global::System.DateTime> DateDesludge, 
                    string ServiceProvider, 
                    string HasGreaseTrap, 
                    string LocationGrease, 
                    string CapacityGreaseTrap, 
                    string FrequencyGrease, 
                    string HaulerGrease, 
                    string HasWasteWater, 
                    string UsedOilProperlyDisposed, 
                    string TypeofOil, 
                    string FrequencyofHaulingOil, 
                    string HaulerOil, 
                    string HasAirPollutionManager, 
                    string DeviceType, 
                    string MaintenanceProvider, 
                    string PurposeOfInspection, 
                    global::System.Nullable<global::System.DateTime> ReinspectDate, 
                    string LevelofInspection, 
                    string LandUse, 
                    string OwnershipTerms, 
                    string Lessee, 
                    string StandAlone, 
                    string EstablishmentStatus, 
                    string InspectorObservation, 
                    string Directives, 
                    string OVR, 
                    string Recommendations, 
                    string Inspector, 
                    string Encoder) {
            if ((AccountNo == null)) {
                throw new global::System.ArgumentNullException("AccountNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(AccountNo));
            }
            if ((BusinessName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BusinessName));
            }
            if ((Address == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Address));
            }
            if ((Barangay == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Barangay));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NatureOfBusiness == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NatureOfBusiness));
            }
            if ((EstablishmentHas == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(EstablishmentHas));
            }
            if ((BusinessStatus == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BusinessStatus));
            }
            if ((EstablishmentIs == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(EstablishmentIs));
            }
            if ((Violations == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Violations));
            }
            if ((ComplyWithin == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ComplyWithin));
            }
            if ((SecuretheFF == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(SecuretheFF));
            }
            if ((AttendSeminar == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(AttendSeminar));
            }
            if ((MayorsPermit == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MayorsPermit));
            }
            if ((EPPFee == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EPPFee));
            }
            if ((ECCCNC == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ECCCNC));
            }
            if ((ECCCNCNo == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ECCCNCNo));
            }
            if ((ECCDateIssued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(ECCDateIssued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((WDP == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(WDP));
            }
            if ((WDPNo == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(WDPNo));
            }
            if ((WDPDateIssued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(WDPDateIssued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((PTO == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(PTO));
            }
            if ((PTONo == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PTONo));
            }
            if ((PTODateIssued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(PTODateIssued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((HWID == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(HWID));
            }
            if ((HWIDNo == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(HWIDNo));
            }
            if ((HWIDDateIssued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(HWIDDateIssued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((HasPollutionOfficer == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(HasPollutionOfficer));
            }
            if ((PollutionOfficer == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(PollutionOfficer));
            }
            if ((Accreditation == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Accreditation));
            }
            if ((ValidityOfPOC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(ValidityOfPOC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((ContactNo == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(ContactNo));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Email));
            }
            if ((HasWasteBin == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(HasWasteBin));
            }
            if ((BinsLabeled == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(BinsLabeled));
            }
            if ((BinsCovered == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(BinsCovered));
            }
            if ((BinsSegregated == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(BinsSegregated));
            }
            if ((MRF == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(MRF));
            }
            if ((WasteCollected == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(WasteCollected));
            }
            if ((FrequencyHauling == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(FrequencyHauling));
            }
            if ((Hauler == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Hauler));
            }
            if ((HasSeptic == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(HasSeptic));
            }
            if ((LocationSeptic == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(LocationSeptic));
            }
            if ((FrequencyDesludge == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(FrequencyDesludge));
            }
            if ((DateDesludge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(DateDesludge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ServiceProvider == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(ServiceProvider));
            }
            if ((HasGreaseTrap == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(HasGreaseTrap));
            }
            if ((LocationGrease == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(LocationGrease));
            }
            if ((CapacityGreaseTrap == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(CapacityGreaseTrap));
            }
            if ((FrequencyGrease == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(FrequencyGrease));
            }
            if ((HaulerGrease == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(HaulerGrease));
            }
            if ((HasWasteWater == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(HasWasteWater));
            }
            if ((UsedOilProperlyDisposed == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(UsedOilProperlyDisposed));
            }
            if ((TypeofOil == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(TypeofOil));
            }
            if ((FrequencyofHaulingOil == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(FrequencyofHaulingOil));
            }
            if ((HaulerOil == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(HaulerOil));
            }
            if ((HasAirPollutionManager == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(HasAirPollutionManager));
            }
            if ((DeviceType == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(DeviceType));
            }
            if ((MaintenanceProvider == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(MaintenanceProvider));
            }
            if ((PurposeOfInspection == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(PurposeOfInspection));
            }
            if ((ReinspectDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.DateTime)(ReinspectDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((LevelofInspection == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(LevelofInspection));
            }
            if ((LandUse == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(LandUse));
            }
            if ((OwnershipTerms == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(OwnershipTerms));
            }
            if ((Lessee == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(Lessee));
            }
            if ((StandAlone == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(StandAlone));
            }
            if ((EstablishmentStatus == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(EstablishmentStatus));
            }
            if ((InspectorObservation == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(InspectorObservation));
            }
            if ((Directives == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(Directives));
            }
            if ((OVR == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(OVR));
            }
            if ((Recommendations == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(Recommendations));
            }
            if ((Inspector == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(Inspector));
            }
            if ((Encoder == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(Encoder));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string AccountNo, 
                    string BusinessName, 
                    string Address, 
                    string Barangay, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string NatureOfBusiness, 
                    string EstablishmentHas, 
                    string BusinessStatus, 
                    string EstablishmentIs, 
                    string Violations, 
                    string ComplyWithin, 
                    string SecuretheFF, 
                    string AttendSeminar, 
                    string MayorsPermit, 
                    string EPPFee, 
                    string ECCCNC, 
                    string ECCCNCNo, 
                    global::System.Nullable<global::System.DateTime> ECCDateIssued, 
                    string WDP, 
                    string WDPNo, 
                    global::System.Nullable<global::System.DateTime> WDPDateIssued, 
                    string PTO, 
                    string PTONo, 
                    global::System.Nullable<global::System.DateTime> PTODateIssued, 
                    string HWID, 
                    string HWIDNo, 
                    global::System.Nullable<global::System.DateTime> HWIDDateIssued, 
                    string HasPollutionOfficer, 
                    string PollutionOfficer, 
                    string Accreditation, 
                    global::System.Nullable<global::System.DateTime> ValidityOfPOC, 
                    string ContactNo, 
                    string Email, 
                    string HasWasteBin, 
                    string BinsLabeled, 
                    string BinsCovered, 
                    string BinsSegregated, 
                    string MRF, 
                    string WasteCollected, 
                    string FrequencyHauling, 
                    string Hauler, 
                    string HasSeptic, 
                    string LocationSeptic, 
                    string FrequencyDesludge, 
                    global::System.Nullable<global::System.DateTime> DateDesludge, 
                    string ServiceProvider, 
                    string HasGreaseTrap, 
                    string LocationGrease, 
                    string CapacityGreaseTrap, 
                    string FrequencyGrease, 
                    string HaulerGrease, 
                    string HasWasteWater, 
                    string UsedOilProperlyDisposed, 
                    string TypeofOil, 
                    string FrequencyofHaulingOil, 
                    string HaulerOil, 
                    string HasAirPollutionManager, 
                    string DeviceType, 
                    string MaintenanceProvider, 
                    string PurposeOfInspection, 
                    global::System.Nullable<global::System.DateTime> ReinspectDate, 
                    string LevelofInspection, 
                    string LandUse, 
                    string OwnershipTerms, 
                    string Lessee, 
                    string StandAlone, 
                    string EstablishmentStatus, 
                    string InspectorObservation, 
                    string Directives, 
                    string OVR, 
                    string Recommendations, 
                    string Inspector, 
                    string Encoder, 
                    string Original_AccountNo, 
                    string Original_Barangay, 
                    global::System.Nullable<global::System.DateTime> Original_Date, 
                    global::System.Nullable<global::System.DateTime> Original_ECCDateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_WDPDateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_PTODateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_HWIDDateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityOfPOC, 
                    global::System.Nullable<global::System.DateTime> Original_DateDesludge, 
                    global::System.Nullable<global::System.DateTime> Original_ReinspectDate, 
                    string Original_Encoder) {
            if ((AccountNo == null)) {
                throw new global::System.ArgumentNullException("AccountNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(AccountNo));
            }
            if ((BusinessName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BusinessName));
            }
            if ((Address == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Address));
            }
            if ((Barangay == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Barangay));
            }
            if ((Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NatureOfBusiness == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NatureOfBusiness));
            }
            if ((EstablishmentHas == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(EstablishmentHas));
            }
            if ((BusinessStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BusinessStatus));
            }
            if ((EstablishmentIs == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(EstablishmentIs));
            }
            if ((Violations == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Violations));
            }
            if ((ComplyWithin == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ComplyWithin));
            }
            if ((SecuretheFF == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(SecuretheFF));
            }
            if ((AttendSeminar == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(AttendSeminar));
            }
            if ((MayorsPermit == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MayorsPermit));
            }
            if ((EPPFee == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EPPFee));
            }
            if ((ECCCNC == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ECCCNC));
            }
            if ((ECCCNCNo == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ECCCNCNo));
            }
            if ((ECCDateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(ECCDateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((WDP == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(WDP));
            }
            if ((WDPNo == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(WDPNo));
            }
            if ((WDPDateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(WDPDateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((PTO == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(PTO));
            }
            if ((PTONo == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(PTONo));
            }
            if ((PTODateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(PTODateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((HWID == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(HWID));
            }
            if ((HWIDNo == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(HWIDNo));
            }
            if ((HWIDDateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(HWIDDateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((HasPollutionOfficer == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(HasPollutionOfficer));
            }
            if ((PollutionOfficer == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(PollutionOfficer));
            }
            if ((Accreditation == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Accreditation));
            }
            if ((ValidityOfPOC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(ValidityOfPOC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((ContactNo == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(ContactNo));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Email));
            }
            if ((HasWasteBin == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(HasWasteBin));
            }
            if ((BinsLabeled == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(BinsLabeled));
            }
            if ((BinsCovered == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(BinsCovered));
            }
            if ((BinsSegregated == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(BinsSegregated));
            }
            if ((MRF == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(MRF));
            }
            if ((WasteCollected == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(WasteCollected));
            }
            if ((FrequencyHauling == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(FrequencyHauling));
            }
            if ((Hauler == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Hauler));
            }
            if ((HasSeptic == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(HasSeptic));
            }
            if ((LocationSeptic == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(LocationSeptic));
            }
            if ((FrequencyDesludge == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(FrequencyDesludge));
            }
            if ((DateDesludge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(DateDesludge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ServiceProvider == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(ServiceProvider));
            }
            if ((HasGreaseTrap == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(HasGreaseTrap));
            }
            if ((LocationGrease == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(LocationGrease));
            }
            if ((CapacityGreaseTrap == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(CapacityGreaseTrap));
            }
            if ((FrequencyGrease == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(FrequencyGrease));
            }
            if ((HaulerGrease == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(HaulerGrease));
            }
            if ((HasWasteWater == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(HasWasteWater));
            }
            if ((UsedOilProperlyDisposed == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(UsedOilProperlyDisposed));
            }
            if ((TypeofOil == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(TypeofOil));
            }
            if ((FrequencyofHaulingOil == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(FrequencyofHaulingOil));
            }
            if ((HaulerOil == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(HaulerOil));
            }
            if ((HasAirPollutionManager == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(HasAirPollutionManager));
            }
            if ((DeviceType == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(DeviceType));
            }
            if ((MaintenanceProvider == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(MaintenanceProvider));
            }
            if ((PurposeOfInspection == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(PurposeOfInspection));
            }
            if ((ReinspectDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(ReinspectDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((LevelofInspection == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(LevelofInspection));
            }
            if ((LandUse == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(LandUse));
            }
            if ((OwnershipTerms == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(OwnershipTerms));
            }
            if ((Lessee == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Lessee));
            }
            if ((StandAlone == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(StandAlone));
            }
            if ((EstablishmentStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(EstablishmentStatus));
            }
            if ((InspectorObservation == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(InspectorObservation));
            }
            if ((Directives == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Directives));
            }
            if ((OVR == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(OVR));
            }
            if ((Recommendations == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Recommendations));
            }
            if ((Inspector == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Inspector));
            }
            if ((Encoder == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Encoder));
            }
            if ((Original_AccountNo == null)) {
                throw new global::System.ArgumentNullException("Original_AccountNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_AccountNo));
            }
            if ((Original_Barangay == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_Barangay));
            }
            if ((Original_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_ECCDateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_ECCDateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_WDPDateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Original_WDPDateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_PTODateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(Original_PTODateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_HWIDDateIssued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(Original_HWIDDateIssued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_ValidityOfPOC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((System.DateTime)(Original_ValidityOfPOC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_DateDesludge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_DateDesludge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_ReinspectDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((System.DateTime)(Original_ReinspectDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_Encoder == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_Encoder));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BusinessName, 
                    string Address, 
                    string Barangay, 
                    global::System.Nullable<global::System.DateTime> Date, 
                    string NatureOfBusiness, 
                    string EstablishmentHas, 
                    string BusinessStatus, 
                    string EstablishmentIs, 
                    string Violations, 
                    string ComplyWithin, 
                    string SecuretheFF, 
                    string AttendSeminar, 
                    string MayorsPermit, 
                    string EPPFee, 
                    string ECCCNC, 
                    string ECCCNCNo, 
                    global::System.Nullable<global::System.DateTime> ECCDateIssued, 
                    string WDP, 
                    string WDPNo, 
                    global::System.Nullable<global::System.DateTime> WDPDateIssued, 
                    string PTO, 
                    string PTONo, 
                    global::System.Nullable<global::System.DateTime> PTODateIssued, 
                    string HWID, 
                    string HWIDNo, 
                    global::System.Nullable<global::System.DateTime> HWIDDateIssued, 
                    string HasPollutionOfficer, 
                    string PollutionOfficer, 
                    string Accreditation, 
                    global::System.Nullable<global::System.DateTime> ValidityOfPOC, 
                    string ContactNo, 
                    string Email, 
                    string HasWasteBin, 
                    string BinsLabeled, 
                    string BinsCovered, 
                    string BinsSegregated, 
                    string MRF, 
                    string WasteCollected, 
                    string FrequencyHauling, 
                    string Hauler, 
                    string HasSeptic, 
                    string LocationSeptic, 
                    string FrequencyDesludge, 
                    global::System.Nullable<global::System.DateTime> DateDesludge, 
                    string ServiceProvider, 
                    string HasGreaseTrap, 
                    string LocationGrease, 
                    string CapacityGreaseTrap, 
                    string FrequencyGrease, 
                    string HaulerGrease, 
                    string HasWasteWater, 
                    string UsedOilProperlyDisposed, 
                    string TypeofOil, 
                    string FrequencyofHaulingOil, 
                    string HaulerOil, 
                    string HasAirPollutionManager, 
                    string DeviceType, 
                    string MaintenanceProvider, 
                    string PurposeOfInspection, 
                    global::System.Nullable<global::System.DateTime> ReinspectDate, 
                    string LevelofInspection, 
                    string LandUse, 
                    string OwnershipTerms, 
                    string Lessee, 
                    string StandAlone, 
                    string EstablishmentStatus, 
                    string InspectorObservation, 
                    string Directives, 
                    string OVR, 
                    string Recommendations, 
                    string Inspector, 
                    string Encoder, 
                    string Original_AccountNo, 
                    string Original_Barangay, 
                    global::System.Nullable<global::System.DateTime> Original_Date, 
                    global::System.Nullable<global::System.DateTime> Original_ECCDateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_WDPDateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_PTODateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_HWIDDateIssued, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityOfPOC, 
                    global::System.Nullable<global::System.DateTime> Original_DateDesludge, 
                    global::System.Nullable<global::System.DateTime> Original_ReinspectDate, 
                    string Original_Encoder) {
            return this.Update(Original_AccountNo, BusinessName, Address, Barangay, Date, NatureOfBusiness, EstablishmentHas, BusinessStatus, EstablishmentIs, Violations, ComplyWithin, SecuretheFF, AttendSeminar, MayorsPermit, EPPFee, ECCCNC, ECCCNCNo, ECCDateIssued, WDP, WDPNo, WDPDateIssued, PTO, PTONo, PTODateIssued, HWID, HWIDNo, HWIDDateIssued, HasPollutionOfficer, PollutionOfficer, Accreditation, ValidityOfPOC, ContactNo, Email, HasWasteBin, BinsLabeled, BinsCovered, BinsSegregated, MRF, WasteCollected, FrequencyHauling, Hauler, HasSeptic, LocationSeptic, FrequencyDesludge, DateDesludge, ServiceProvider, HasGreaseTrap, LocationGrease, CapacityGreaseTrap, FrequencyGrease, HaulerGrease, HasWasteWater, UsedOilProperlyDisposed, TypeofOil, FrequencyofHaulingOil, HaulerOil, HasAirPollutionManager, DeviceType, MaintenanceProvider, PurposeOfInspection, ReinspectDate, LevelofInspection, LandUse, OwnershipTerms, Lessee, StandAlone, EstablishmentStatus, InspectorObservation, Directives, OVR, Recommendations, Inspector, Encoder, Original_AccountNo, Original_Barangay, Original_Date, Original_ECCDateIssued, Original_WDPDateIssued, Original_PTODateIssued, Original_HWIDDateIssued, Original_ValidityOfPOC, Original_DateDesludge, Original_ReinspectDate, Original_Encoder);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private InspectionReportTableAdapter _inspectionReportTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public InspectionReportTableAdapter InspectionReportTableAdapter {
            get {
                return this._inspectionReportTableAdapter;
            }
            set {
                this._inspectionReportTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._inspectionReportTableAdapter != null) 
                            && (this._inspectionReportTableAdapter.Connection != null))) {
                    return this._inspectionReportTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._inspectionReportTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(InspectionReportDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._inspectionReportTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.InspectionReport.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._inspectionReportTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(InspectionReportDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._inspectionReportTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.InspectionReport.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._inspectionReportTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(InspectionReportDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._inspectionReportTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.InspectionReport.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._inspectionReportTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(InspectionReportDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._inspectionReportTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._inspectionReportTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._inspectionReportTableAdapter != null)) {
                    revertConnections.Add(this._inspectionReportTableAdapter, this._inspectionReportTableAdapter.Connection);
                    this._inspectionReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._inspectionReportTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._inspectionReportTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._inspectionReportTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._inspectionReportTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._inspectionReportTableAdapter != null)) {
                    this._inspectionReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._inspectionReportTableAdapter]));
                    this._inspectionReportTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591